#!/bin/bash - 
#===============================================================================
#          FILE: passe
#         USAGE: ./passe 
#   DESCRIPTION: 
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Yordan Radunchev (), yordan@radunchev.com
#  ORGANIZATION: 
#       CREATED: 2017-10-29 13:51
#      REVISION:  ---
#===============================================================================

#set -o nounset                              # Treat unset variables as an error

#-------------------------------------------------------------------------------
# Configuration zone. Edit to suit your needs.
#-------------------------------------------------------------------------------
readonly pwdf=${HOME}/.passlist 

#-------------------------------------------------------------------------------
# End of Configuration. Don not edit anything pass this line!
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Functions
#-------------------------------------------------------------------------------

p_env_check() { 
  for app in {gpg,xclip,sed}; do                        #  list of tools we need
    command -v ${app} >/dev/null 2>&1 || { echo >&2 "${app} missing.";exit 1; }
  done
}                         # ----------  end of function p_env_checks  ----------

p_usage() {
  echo -e "\n\tUsage:  ${0##/*/} File\n"
  exit 1
}                             # ----------  end of function p_usage   ----------

p_labl_check() {
  [[ -z "${labl}" ]] && { p_usage;exit 1; }  
  gpg -qd ${pwdf} | grep --quiet ${labl} && return 0 || return 1
}                         #  ----------  end of function p_lbl_check  ----------

p_ls_labels() {
  mapfile -t entr < <(gpg -qd ${pwdf} | grep ^[^:] -)
  printf '%s\n' "${entr[@]}"
}                         # ----------  end of function p_read_labels ----------

p_copy_password() {  
  $(p_labl_check) || { echo >&2 "No such record.";exit 1; }
  gpg -qd ${pwdf} |\
    sed -n -e "/${labl}/{n;p;}" |\
    cut -d: -f3 |\
    xclip -r -selection clipboard
}                      # ----------  end of function p_copy_password  ----------

p_show_entry() {  
  $(p_labl_check) || { echo >&2 "No such record.";exit 1; }
  gpg -qd ${pwdf} | grep -A 5 ${labl}
}                     # ----------  end of function p_copy_password   ----------

p_create_label() {
  $(p_labl_check) && { echo >&2 "Entry already exists.";exit 1; }
  cat << EOF > ${pwdf}
${labl}
:pass:${pass}
:login:${logn}
:url:${urll}
:key:${KEYY}
:timestamp:${stmp}
EOF
}                       # ----------  end of function p_create_label  ----------

main() {
  p_env_check
  [[ $# -lt 1 ]] && { p_ls_labels; exit 1; }      #  default to ls if no options
  cmdl=$1
  labl=$2
  case $cmdl in
    ls) p_ls_labels ;;
    show) p_show_entry ;;
    copy) p_copy_password ;;
    *) p_usage ;;
  esac
}                                   # ----------  end of function main ----------

main "$@"
